{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","catch","error","Error","App","useState","setGoods","visibleGoods","useMemo","JSON","stringify","getAllGoods","a","getFirstFive","sort","currGood","nextGood","localeCompare","slice","getRed","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAOF,EAAKE,OAHvB,SAKGF,EAAKG,MAJDH,EAAKI,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,MAIf,ICNME,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOhB,EAAP,KAAciB,EAAd,KAEMC,EAAeC,mBAAQ,WAC3B,OAAOnB,IACN,CAACoB,KAAKC,UAAUrB,KAEbsB,EAAW,uCAAG,sBAAAC,EAAA,kEAAYN,EAAZ,SAA2BV,IAA3B,uGAAH,qDACXiB,EAAY,uCAAG,sBAAAD,EAAA,kEAAYN,EAAZ,SDDdV,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZyB,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAASrB,KAAKuB,cAAcD,EAAStB,SAClEwB,MAAM,EAAG,MACXjB,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,MCJC,uGAAH,qDACZiB,EAAM,uCAAG,sBAAAP,EAAA,kEAAYN,EAAZ,SDQRV,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM+B,QAAO,kBAAyB,QAAzB,EAAG3B,YAC9BQ,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,MCXL,uGAAH,qDAEZ,OACE,sBAAKmB,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAASZ,EAHX,4BAQA,wBACEW,KAAK,SACL,UAAQ,oBACRC,QAASV,EAHX,gCAQA,wBACES,KAAK,SACL,UAAQ,aACRC,QAASJ,EAHX,4BAQA,cAAC,EAAD,CAAW9B,MAAOkB,QC3CxBiB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.61e30d94.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json())\n    .catch(error => {\n      throw new Error(error);\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((currGood, nextGood) => currGood.name.localeCompare(nextGood.name))\n      .slice(0, 5))\n    .catch(error => {\n      throw new Error(error);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'))\n    .catch(error => {\n      throw new Error(error);\n    });\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const visibleGoods = useMemo(() => {\n    return goods;\n  }, [JSON.stringify(goods)]);\n\n  const getAllGoods = async () => setGoods(await getAll());\n  const getFirstFive = async () => setGoods(await get5First());\n  const getRed = async () => setGoods(await getRedGoods());\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={getAllGoods}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={getFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={getRed}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}